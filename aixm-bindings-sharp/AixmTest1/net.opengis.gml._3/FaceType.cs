//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace net.opengis.gml._3
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>gml:Face represents the 2-dimensional topology primitive.
    ///The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value "sequence".
    ///The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. 
    ///A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FaceType", Namespace="http://www.opengis.net/gml/3.2")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Face", Namespace="http://www.opengis.net/gml/3.2")]
    public partial class FaceType : AbstractTopoPrimitiveType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NodePropertyType> _isolated;
        
        [System.Xml.Serialization.XmlElementAttribute("isolated")]
        public System.Collections.ObjectModel.Collection<NodePropertyType> Isolated
        {
            get
            {
                return this._isolated;
            }
            private set
            {
                this._isolated = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Isolated-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Isolated collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsolatedSpecified
        {
            get
            {
                return (this.Isolated.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="FaceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FaceType" /> class.</para>
        /// </summary>
        public FaceType()
        {
            this._isolated = new System.Collections.ObjectModel.Collection<NodePropertyType>();
            this._directedEdge = new System.Collections.ObjectModel.Collection<DirectedEdgePropertyType>();
            this._directedTopoSolid = new System.Collections.ObjectModel.Collection<DirectedTopoSolidPropertyType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DirectedEdgePropertyType> _directedEdge;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("directedEdge")]
        public System.Collections.ObjectModel.Collection<DirectedEdgePropertyType> DirectedEdge
        {
            get
            {
                return this._directedEdge;
            }
            private set
            {
                this._directedEdge = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DirectedTopoSolidPropertyType> _directedTopoSolid;
        
        [System.Xml.Serialization.XmlElementAttribute("directedTopoSolid")]
        public System.Collections.ObjectModel.Collection<DirectedTopoSolidPropertyType> DirectedTopoSolid
        {
            get
            {
                return this._directedTopoSolid;
            }
            private set
            {
                this._directedTopoSolid = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DirectedTopoSolid-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DirectedTopoSolid collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectedTopoSolidSpecified
        {
            get
            {
                return (this.DirectedTopoSolid.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("surfaceProperty")]
        public net.opengis.gml._3.SurfacePropertyType SurfaceProperty { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("aggregationType")]
        public net.opengis.gml._3.AggregationType AggregationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AggregationType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AggregationType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AggregationTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _universal = false;
        
        /// <summary>
        /// <para>If the topological representation exists an unbounded manifold (e.g. Euclidean plane), a gml:Face must indicate whether it is a universal face or not, to ensure a lossless topology representation as defined by Kuijpers, et. al. (see OGC 05-102 Topology IPR). The optional universal attribute of type boolean is used to indicate this. NOTE The universal face is normally not part of any feature, and is used to represent the unbounded portion of the data set. Its interior boundary (it has no exterior boundary) would normally be considered the exterior boundary of the map represented by the data set.</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlAttributeAttribute("universal")]
        public bool Universal
        {
            get
            {
                return this._universal;
            }
            set
            {
                this._universal = value;
            }
        }
    }
}
