//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace net.opengis.gml._3
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>gml:Edge represents the 1-dimensional primitive.
    ///The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node.   
    ///The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". 
    ///If provided, the aggregationType attribute shall have the value "sequence".
    ///An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EdgeType", Namespace="http://www.opengis.net/gml/3.2")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Edge", Namespace="http://www.opengis.net/gml/3.2")]
    public partial class EdgeType : AbstractTopoPrimitiveType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("container")]
        public TopoSolidPropertyType Container { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DirectedNodePropertyType> _directedNode;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("directedNode")]
        public System.Collections.ObjectModel.Collection<DirectedNodePropertyType> DirectedNode
        {
            get
            {
                return this._directedNode;
            }
            private set
            {
                this._directedNode = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EdgeType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EdgeType" /> class.</para>
        /// </summary>
        public EdgeType()
        {
            this._directedNode = new System.Collections.ObjectModel.Collection<DirectedNodePropertyType>();
            this._directedFace = new System.Collections.ObjectModel.Collection<DirectedFacePropertyType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DirectedFacePropertyType> _directedFace;
        
        [System.Xml.Serialization.XmlElementAttribute("directedFace")]
        public System.Collections.ObjectModel.Collection<DirectedFacePropertyType> DirectedFace
        {
            get
            {
                return this._directedFace;
            }
            private set
            {
                this._directedFace = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DirectedFace-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DirectedFace collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectedFaceSpecified
        {
            get
            {
                return (this.DirectedFace.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("curveProperty")]
        public net.opengis.gml._3.CurvePropertyType CurveProperty { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("aggregationType")]
        public net.opengis.gml._3.AggregationType AggregationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AggregationType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AggregationType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AggregationTypeSpecified { get; set; }
    }
}
