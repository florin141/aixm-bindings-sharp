//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace aixm.v5_1_1
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AerialRefuellingTimeSliceType", Namespace="http://www.aixm.aero/schema/5.1.1")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("AerialRefuellingTimeSlice", Namespace="http://www.aixm.aero/schema/5.1.1")]
    public partial class AerialRefuellingTimeSliceType : aixm.v5_1_1.AbstractAIXMTimeSliceType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("designatorPrefix", IsNullable=true)]
        public aixm.v5_1_1.CodeAerialRefuellingPrefixType DesignatorPrefix { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("designatorNumber", IsNullable=true)]
        public aixm.v5_1_1.NoNumberType DesignatorNumber { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("designatorSuffix", IsNullable=true)]
        public aixm.v5_1_1.TextDesignatorType DesignatorSuffix { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("designatorDirection", IsNullable=true)]
        public aixm.v5_1_1.CodeCardinalDirectionType DesignatorDirection { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("name", IsNullable=true)]
        public aixm.v5_1_1.TextNameType Name { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("type", IsNullable=true)]
        public aixm.v5_1_1.CodeAerialRefuellingType Type { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("radarBeaconSetting", IsNullable=true)]
        public aixm.v5_1_1.NoNumberType RadarBeaconSetting { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("xbandRadarSetting", IsNullable=true)]
        public aixm.v5_1_1.NoNumberType XbandRadarSetting { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("tankerChannel", IsNullable=true)]
        public aixm.v5_1_1.CodeTACANChannelType TankerChannel { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("receiverChannel", IsNullable=true)]
        public aixm.v5_1_1.CodeTACANChannelType ReceiverChannel { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("helicopterRoute", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType HelicopterRoute { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("specialRefuelling", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType SpecialRefuelling { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("bidirectionalUse", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType BidirectionalUse { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("reverseDirectionTurn", IsNullable=true)]
        public aixm.v5_1_1.CodeDirectionTurnType ReverseDirectionTurn { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteAvailabilityPropertyType> _availability;
        
        [System.Xml.Serialization.XmlElementAttribute("availability", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<RouteAvailabilityPropertyType> Availability
        {
            get
            {
                return this._availability;
            }
            private set
            {
                this._availability = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Availability-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Availability collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailabilitySpecified
        {
            get
            {
                return (this.Availability.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="AerialRefuellingTimeSliceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AerialRefuellingTimeSliceType" /> class.</para>
        /// </summary>
        public AerialRefuellingTimeSliceType()
        {
            this._availability = new System.Collections.ObjectModel.Collection<RouteAvailabilityPropertyType>();
            this._protectingAirspace = new System.Collections.ObjectModel.Collection<AirspacePropertyType>();
            this._track = new System.Collections.ObjectModel.Collection<AerialRefuellingTrackPropertyType>();
            this._anchor = new System.Collections.ObjectModel.Collection<AerialRefuellingAnchorPropertyType>();
            this._managingOrganisation = new System.Collections.ObjectModel.Collection<AuthorityForAerialRefuellingPropertyType>();
            this._annotation = new System.Collections.ObjectModel.Collection<NotePropertyType>();
            this._extension = new System.Collections.ObjectModel.Collection<AerialRefuellingTimeSliceTypeExtension>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AirspacePropertyType> _protectingAirspace;
        
        [System.Xml.Serialization.XmlElementAttribute("protectingAirspace", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AirspacePropertyType> ProtectingAirspace
        {
            get
            {
                return this._protectingAirspace;
            }
            private set
            {
                this._protectingAirspace = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProtectingAirspace-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProtectingAirspace collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProtectingAirspaceSpecified
        {
            get
            {
                return (this.ProtectingAirspace.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AerialRefuellingTrackPropertyType> _track;
        
        [System.Xml.Serialization.XmlElementAttribute("track", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AerialRefuellingTrackPropertyType> Track
        {
            get
            {
                return this._track;
            }
            private set
            {
                this._track = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Track-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Track collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrackSpecified
        {
            get
            {
                return (this.Track.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AerialRefuellingAnchorPropertyType> _anchor;
        
        [System.Xml.Serialization.XmlElementAttribute("anchor", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AerialRefuellingAnchorPropertyType> Anchor
        {
            get
            {
                return this._anchor;
            }
            private set
            {
                this._anchor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Anchor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Anchor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnchorSpecified
        {
            get
            {
                return (this.Anchor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("oppositeTrack", IsNullable=true)]
        public AerialRefuellingPropertyType OppositeTrack { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuthorityForAerialRefuellingPropertyType> _managingOrganisation;
        
        [System.Xml.Serialization.XmlElementAttribute("managingOrganisation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AuthorityForAerialRefuellingPropertyType> ManagingOrganisation
        {
            get
            {
                return this._managingOrganisation;
            }
            private set
            {
                this._managingOrganisation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ManagingOrganisation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ManagingOrganisation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManagingOrganisationSpecified
        {
            get
            {
                return (this.ManagingOrganisation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NotePropertyType> _annotation;
        
        [System.Xml.Serialization.XmlElementAttribute("annotation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NotePropertyType> Annotation
        {
            get
            {
                return this._annotation;
            }
            private set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Annotation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AerialRefuellingTimeSliceTypeExtension> _extension;
        
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.ObjectModel.Collection<AerialRefuellingTimeSliceTypeExtension> Extension
        {
            get
            {
                return this._extension;
            }
            private set
            {
                this._extension = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
    }
}
