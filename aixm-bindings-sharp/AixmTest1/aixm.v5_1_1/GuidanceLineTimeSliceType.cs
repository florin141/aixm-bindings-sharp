//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace aixm.v5_1_1
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GuidanceLineTimeSliceType", Namespace="http://www.aixm.aero/schema/5.1.1")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GuidanceLineTimeSlice", Namespace="http://www.aixm.aero/schema/5.1.1")]
    public partial class GuidanceLineTimeSliceType : aixm.v5_1_1.AbstractAIXMTimeSliceType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("designator", IsNullable=true)]
        public aixm.v5_1_1.TextNameType Designator { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("type", IsNullable=true)]
        public aixm.v5_1_1.CodeGuidanceLineType Type { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("maxSpeed", IsNullable=true)]
        public aixm.v5_1_1.ValSpeedType MaxSpeed { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("usageDirection", IsNullable=true)]
        public aixm.v5_1_1.CodeDirectionType UsageDirection { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TouchDownLiftOffPropertyType> _connectedTouchDownLiftOff;
        
        [System.Xml.Serialization.XmlElementAttribute("connectedTouchDownLiftOff", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<TouchDownLiftOffPropertyType> ConnectedTouchDownLiftOff
        {
            get
            {
                return this._connectedTouchDownLiftOff;
            }
            private set
            {
                this._connectedTouchDownLiftOff = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConnectedTouchDownLiftOff-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectedTouchDownLiftOff collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectedTouchDownLiftOffSpecified
        {
            get
            {
                return (this.ConnectedTouchDownLiftOff.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GuidanceLineTimeSliceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GuidanceLineTimeSliceType" /> class.</para>
        /// </summary>
        public GuidanceLineTimeSliceType()
        {
            this._connectedTouchDownLiftOff = new System.Collections.ObjectModel.Collection<TouchDownLiftOffPropertyType>();
            this._connectedRunwayCentrelinePoint = new System.Collections.ObjectModel.Collection<RunwayCentrelinePointPropertyType>();
            this._connectedApron = new System.Collections.ObjectModel.Collection<ApronPropertyType>();
            this._connectedStand = new System.Collections.ObjectModel.Collection<AircraftStandPropertyType>();
            this._connectedTaxiway = new System.Collections.ObjectModel.Collection<TaxiwayPropertyType>();
            this._annotation = new System.Collections.ObjectModel.Collection<NotePropertyType>();
            this._extension = new System.Collections.ObjectModel.Collection<GuidanceLineTimeSliceTypeExtension>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RunwayCentrelinePointPropertyType> _connectedRunwayCentrelinePoint;
        
        [System.Xml.Serialization.XmlElementAttribute("connectedRunwayCentrelinePoint", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<RunwayCentrelinePointPropertyType> ConnectedRunwayCentrelinePoint
        {
            get
            {
                return this._connectedRunwayCentrelinePoint;
            }
            private set
            {
                this._connectedRunwayCentrelinePoint = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConnectedRunwayCentrelinePoint-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectedRunwayCentrelinePoint collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectedRunwayCentrelinePointSpecified
        {
            get
            {
                return (this.ConnectedRunwayCentrelinePoint.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ApronPropertyType> _connectedApron;
        
        [System.Xml.Serialization.XmlElementAttribute("connectedApron", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ApronPropertyType> ConnectedApron
        {
            get
            {
                return this._connectedApron;
            }
            private set
            {
                this._connectedApron = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConnectedApron-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectedApron collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectedApronSpecified
        {
            get
            {
                return (this.ConnectedApron.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AircraftStandPropertyType> _connectedStand;
        
        [System.Xml.Serialization.XmlElementAttribute("connectedStand", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AircraftStandPropertyType> ConnectedStand
        {
            get
            {
                return this._connectedStand;
            }
            private set
            {
                this._connectedStand = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConnectedStand-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectedStand collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectedStandSpecified
        {
            get
            {
                return (this.ConnectedStand.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("extent", IsNullable=true)]
        public ElevatedCurvePropertyType Extent { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TaxiwayPropertyType> _connectedTaxiway;
        
        [System.Xml.Serialization.XmlElementAttribute("connectedTaxiway", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<TaxiwayPropertyType> ConnectedTaxiway
        {
            get
            {
                return this._connectedTaxiway;
            }
            private set
            {
                this._connectedTaxiway = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConnectedTaxiway-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ConnectedTaxiway collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectedTaxiwaySpecified
        {
            get
            {
                return (this.ConnectedTaxiway.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NotePropertyType> _annotation;
        
        [System.Xml.Serialization.XmlElementAttribute("annotation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NotePropertyType> Annotation
        {
            get
            {
                return this._annotation;
            }
            private set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Annotation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GuidanceLineTimeSliceTypeExtension> _extension;
        
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.ObjectModel.Collection<GuidanceLineTimeSliceTypeExtension> Extension
        {
            get
            {
                return this._extension;
            }
            private set
            {
                this._extension = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
    }
}
