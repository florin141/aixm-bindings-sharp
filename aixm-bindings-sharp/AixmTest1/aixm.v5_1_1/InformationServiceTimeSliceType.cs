//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace aixm.v5_1_1
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InformationServiceTimeSliceType", Namespace="http://www.aixm.aero/schema/5.1.1")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("InformationServiceTimeSlice", Namespace="http://www.aixm.aero/schema/5.1.1")]
    public partial class InformationServiceTimeSliceType : aixm.v5_1_1.AbstractAIXMTimeSliceType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("flightOperations", IsNullable=true)]
        public aixm.v5_1_1.CodeFlightDestinationType FlightOperations { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("rank", IsNullable=true)]
        public aixm.v5_1_1.CodeFacilityRankingType Rank { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("compliantICAO", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType CompliantICAO { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("name", IsNullable=true)]
        public aixm.v5_1_1.TextNameType Name { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("location", IsNullable=true)]
        public ElevatedPointPropertyType Location { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("serviceProvider", IsNullable=true)]
        public UnitPropertyType ServiceProvider { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<CallsignDetailPropertyType> _call_Sign;
        
        [System.Xml.Serialization.XmlElementAttribute("call-sign", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<CallsignDetailPropertyType> Call_Sign
        {
            get
            {
                return this._call_Sign;
            }
            private set
            {
                this._call_Sign = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Call_Sign-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Call_Sign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Call_SignSpecified
        {
            get
            {
                return (this.Call_Sign.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InformationServiceTimeSliceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InformationServiceTimeSliceType" /> class.</para>
        /// </summary>
        public InformationServiceTimeSliceType()
        {
            this._call_Sign = new System.Collections.ObjectModel.Collection<CallsignDetailPropertyType>();
            this._radioCommunication = new System.Collections.ObjectModel.Collection<RadioCommunicationChannelPropertyType>();
            this._groundCommunication = new System.Collections.ObjectModel.Collection<ContactInformationPropertyType>();
            this._availability = new System.Collections.ObjectModel.Collection<ServiceOperationalStatusPropertyType>();
            this._annotation = new System.Collections.ObjectModel.Collection<NotePropertyType>();
            this._navaidBroadcast = new System.Collections.ObjectModel.Collection<VORPropertyType>();
            this._clientAirspace = new System.Collections.ObjectModel.Collection<AirspacePropertyType>();
            this._clientAirport = new System.Collections.ObjectModel.Collection<AirportHeliportPropertyType>();
            this._clientRoute = new System.Collections.ObjectModel.Collection<RoutePortionPropertyType>();
            this._clientProcedure = new System.Collections.ObjectModel.Collection<ProcedurePropertyType>();
            this._clientHolding = new System.Collections.ObjectModel.Collection<HoldingPatternPropertyType>();
            this._clientAerialRefuelling = new System.Collections.ObjectModel.Collection<AerialRefuellingPropertyType>();
            this._extension = new System.Collections.ObjectModel.Collection<InformationServiceTimeSliceTypeExtension>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RadioCommunicationChannelPropertyType> _radioCommunication;
        
        [System.Xml.Serialization.XmlElementAttribute("radioCommunication", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<RadioCommunicationChannelPropertyType> RadioCommunication
        {
            get
            {
                return this._radioCommunication;
            }
            private set
            {
                this._radioCommunication = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RadioCommunication-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RadioCommunication collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadioCommunicationSpecified
        {
            get
            {
                return (this.RadioCommunication.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ContactInformationPropertyType> _groundCommunication;
        
        [System.Xml.Serialization.XmlElementAttribute("groundCommunication", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ContactInformationPropertyType> GroundCommunication
        {
            get
            {
                return this._groundCommunication;
            }
            private set
            {
                this._groundCommunication = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroundCommunication-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GroundCommunication collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroundCommunicationSpecified
        {
            get
            {
                return (this.GroundCommunication.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ServiceOperationalStatusPropertyType> _availability;
        
        [System.Xml.Serialization.XmlElementAttribute("availability", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ServiceOperationalStatusPropertyType> Availability
        {
            get
            {
                return this._availability;
            }
            private set
            {
                this._availability = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Availability-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Availability collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailabilitySpecified
        {
            get
            {
                return (this.Availability.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NotePropertyType> _annotation;
        
        [System.Xml.Serialization.XmlElementAttribute("annotation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NotePropertyType> Annotation
        {
            get
            {
                return this._annotation;
            }
            private set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Annotation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("type", IsNullable=true)]
        public aixm.v5_1_1.CodeServiceInformationType Type { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("voice", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType Voice { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("dataLink", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType DataLink { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("recorded", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType Recorded { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VORPropertyType> _navaidBroadcast;
        
        [System.Xml.Serialization.XmlElementAttribute("navaidBroadcast", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<VORPropertyType> NavaidBroadcast
        {
            get
            {
                return this._navaidBroadcast;
            }
            private set
            {
                this._navaidBroadcast = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NavaidBroadcast-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the NavaidBroadcast collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NavaidBroadcastSpecified
        {
            get
            {
                return (this.NavaidBroadcast.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AirspacePropertyType> _clientAirspace;
        
        [System.Xml.Serialization.XmlElementAttribute("clientAirspace", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AirspacePropertyType> ClientAirspace
        {
            get
            {
                return this._clientAirspace;
            }
            private set
            {
                this._clientAirspace = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClientAirspace-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClientAirspace collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientAirspaceSpecified
        {
            get
            {
                return (this.ClientAirspace.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AirportHeliportPropertyType> _clientAirport;
        
        [System.Xml.Serialization.XmlElementAttribute("clientAirport", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AirportHeliportPropertyType> ClientAirport
        {
            get
            {
                return this._clientAirport;
            }
            private set
            {
                this._clientAirport = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClientAirport-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClientAirport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientAirportSpecified
        {
            get
            {
                return (this.ClientAirport.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RoutePortionPropertyType> _clientRoute;
        
        [System.Xml.Serialization.XmlElementAttribute("clientRoute", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<RoutePortionPropertyType> ClientRoute
        {
            get
            {
                return this._clientRoute;
            }
            private set
            {
                this._clientRoute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClientRoute-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClientRoute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientRouteSpecified
        {
            get
            {
                return (this.ClientRoute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ProcedurePropertyType> _clientProcedure;
        
        [System.Xml.Serialization.XmlElementAttribute("clientProcedure", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ProcedurePropertyType> ClientProcedure
        {
            get
            {
                return this._clientProcedure;
            }
            private set
            {
                this._clientProcedure = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClientProcedure-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClientProcedure collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientProcedureSpecified
        {
            get
            {
                return (this.ClientProcedure.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<HoldingPatternPropertyType> _clientHolding;
        
        [System.Xml.Serialization.XmlElementAttribute("clientHolding", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<HoldingPatternPropertyType> ClientHolding
        {
            get
            {
                return this._clientHolding;
            }
            private set
            {
                this._clientHolding = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClientHolding-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClientHolding collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientHoldingSpecified
        {
            get
            {
                return (this.ClientHolding.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AerialRefuellingPropertyType> _clientAerialRefuelling;
        
        [System.Xml.Serialization.XmlElementAttribute("clientAerialRefuelling", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AerialRefuellingPropertyType> ClientAerialRefuelling
        {
            get
            {
                return this._clientAerialRefuelling;
            }
            private set
            {
                this._clientAerialRefuelling = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClientAerialRefuelling-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ClientAerialRefuelling collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientAerialRefuellingSpecified
        {
            get
            {
                return (this.ClientAerialRefuelling.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InformationServiceTimeSliceTypeExtension> _extension;
        
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.ObjectModel.Collection<InformationServiceTimeSliceTypeExtension> Extension
        {
            get
            {
                return this._extension;
            }
            private set
            {
                this._extension = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
    }
}
