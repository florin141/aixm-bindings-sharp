//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace aixm.v5_1_1
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InstrumentApproachProcedureTimeSliceType", Namespace="http://www.aixm.aero/schema/5.1.1")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("InstrumentApproachProcedureTimeSlice", Namespace="http://www.aixm.aero/schema/5.1.1")]
    public partial class InstrumentApproachProcedureTimeSliceType : aixm.v5_1_1.AbstractAIXMTimeSliceType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("communicationFailureInstruction", IsNullable=true)]
        public aixm.v5_1_1.TextInstructionType CommunicationFailureInstruction { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("instruction", IsNullable=true)]
        public aixm.v5_1_1.TextInstructionType Instruction { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("designCriteria", IsNullable=true)]
        public aixm.v5_1_1.CodeDesignStandardType DesignCriteria { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("codingStandard", IsNullable=true)]
        public aixm.v5_1_1.CodeProcedureCodingStandardType CodingStandard { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("flightChecked", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType FlightChecked { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("name", IsNullable=true)]
        public aixm.v5_1_1.TextNameType Name { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RNAV", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType RNAV { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ProcedureAvailabilityPropertyType> _availability;
        
        [System.Xml.Serialization.XmlElementAttribute("availability", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ProcedureAvailabilityPropertyType> Availability
        {
            get
            {
                return this._availability;
            }
            private set
            {
                this._availability = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Availability-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Availability collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailabilitySpecified
        {
            get
            {
                return (this.Availability.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InstrumentApproachProcedureTimeSliceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InstrumentApproachProcedureTimeSliceType" /> class.</para>
        /// </summary>
        public InstrumentApproachProcedureTimeSliceType()
        {
            this._availability = new System.Collections.ObjectModel.Collection<ProcedureAvailabilityPropertyType>();
            this._airportHeliport = new System.Collections.ObjectModel.Collection<AirportHeliportPropertyType>();
            this._aircraftCharacteristic = new System.Collections.ObjectModel.Collection<AircraftCharacteristicPropertyType>();
            this._flightTransition = new System.Collections.ObjectModel.Collection<ProcedureTransitionPropertyType>();
            this._annotation = new System.Collections.ObjectModel.Collection<NotePropertyType>();
            this._missedInstruction = new System.Collections.ObjectModel.Collection<MissedApproachGroupPropertyType>();
            this._extension = new System.Collections.ObjectModel.Collection<InstrumentApproachProcedureTimeSliceTypeExtension>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AirportHeliportPropertyType> _airportHeliport;
        
        [System.Xml.Serialization.XmlElementAttribute("airportHeliport", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AirportHeliportPropertyType> AirportHeliport
        {
            get
            {
                return this._airportHeliport;
            }
            private set
            {
                this._airportHeliport = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AirportHeliport-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AirportHeliport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AirportHeliportSpecified
        {
            get
            {
                return (this.AirportHeliport.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AircraftCharacteristicPropertyType> _aircraftCharacteristic;
        
        [System.Xml.Serialization.XmlElementAttribute("aircraftCharacteristic", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AircraftCharacteristicPropertyType> AircraftCharacteristic
        {
            get
            {
                return this._aircraftCharacteristic;
            }
            private set
            {
                this._aircraftCharacteristic = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AircraftCharacteristic-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AircraftCharacteristic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AircraftCharacteristicSpecified
        {
            get
            {
                return (this.AircraftCharacteristic.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ProcedureTransitionPropertyType> _flightTransition;
        
        [System.Xml.Serialization.XmlElementAttribute("flightTransition", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ProcedureTransitionPropertyType> FlightTransition
        {
            get
            {
                return this._flightTransition;
            }
            private set
            {
                this._flightTransition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FlightTransition-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the FlightTransition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlightTransitionSpecified
        {
            get
            {
                return (this.FlightTransition.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("guidanceFacility_specialNavigationSystem", IsNullable=true)]
        public SpecialNavigationSystemPropertyType GuidanceFacility_SpecialNavigationSystem { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("guidanceFacility_radar", IsNullable=true)]
        public RadarSystemPropertyType GuidanceFacility_Radar { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("guidanceFacility_navaid", IsNullable=true)]
        public NavaidPropertyType GuidanceFacility_Navaid { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NotePropertyType> _annotation;
        
        [System.Xml.Serialization.XmlElementAttribute("annotation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NotePropertyType> Annotation
        {
            get
            {
                return this._annotation;
            }
            private set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Annotation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("safeAltitude", IsNullable=true)]
        public SafeAltitudeAreaPropertyType SafeAltitude { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("approachPrefix", IsNullable=true)]
        public aixm.v5_1_1.CodeApproachPrefixType ApproachPrefix { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("approachType", IsNullable=true)]
        public aixm.v5_1_1.CodeApproachType ApproachType { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("multipleIdentification", IsNullable=true)]
        public aixm.v5_1_1.CodeUpperAlphaType MultipleIdentification { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("copterTrack", IsNullable=true)]
        public aixm.v5_1_1.ValBearingType CopterTrack { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("circlingIdentification", IsNullable=true)]
        public aixm.v5_1_1.CodeUpperAlphaType CirclingIdentification { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("courseReversalInstruction", IsNullable=true)]
        public aixm.v5_1_1.TextInstructionType CourseReversalInstruction { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("additionalEquipment", IsNullable=true)]
        public aixm.v5_1_1.CodeApproachEquipmentAdditionalType AdditionalEquipment { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("channelGNSS", IsNullable=true)]
        public aixm.v5_1_1.ValChannelNumberType ChannelGNSS { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("WAASReliable", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType WAASReliable { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("landing", IsNullable=true)]
        public LandingTakeoffAreaCollectionPropertyType Landing { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MissedApproachGroupPropertyType> _missedInstruction;
        
        [System.Xml.Serialization.XmlElementAttribute("missedInstruction", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<MissedApproachGroupPropertyType> MissedInstruction
        {
            get
            {
                return this._missedInstruction;
            }
            private set
            {
                this._missedInstruction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissedInstruction-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MissedInstruction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MissedInstructionSpecified
        {
            get
            {
                return (this.MissedInstruction.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("finalProfile", IsNullable=true)]
        public FinalProfilePropertyType FinalProfile { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InstrumentApproachProcedureTimeSliceTypeExtension> _extension;
        
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.ObjectModel.Collection<InstrumentApproachProcedureTimeSliceTypeExtension> Extension
        {
            get
            {
                return this._extension;
            }
            private set
            {
                this._extension = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
    }
}
