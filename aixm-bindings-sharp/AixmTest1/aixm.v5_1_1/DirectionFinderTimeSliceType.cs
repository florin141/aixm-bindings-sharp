//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace aixm.v5_1_1
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DirectionFinderTimeSliceType", Namespace="http://www.aixm.aero/schema/5.1.1")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DirectionFinderTimeSlice", Namespace="http://www.aixm.aero/schema/5.1.1")]
    public partial class DirectionFinderTimeSliceType : aixm.v5_1_1.AbstractAIXMTimeSliceType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("designator", IsNullable=true)]
        public aixm.v5_1_1.CodeNavaidDesignatorType Designator { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("name", IsNullable=true)]
        public aixm.v5_1_1.TextNameType Name { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("emissionClass", IsNullable=true)]
        public aixm.v5_1_1.CodeRadioEmissionType EmissionClass { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("mobile", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType Mobile { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("magneticVariation", IsNullable=true)]
        public aixm.v5_1_1.ValMagneticVariationType MagneticVariation { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("magneticVariationAccuracy", IsNullable=true)]
        public aixm.v5_1_1.ValAngleType MagneticVariationAccuracy { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("dateMagneticVariation", IsNullable=true)]
        public aixm.v5_1_1.DateYearType DateMagneticVariation { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("flightChecked", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType FlightChecked { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("location", IsNullable=true)]
        public ElevatedPointPropertyType Location { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AuthorityForNavaidEquipmentPropertyType> _authority;
        
        [System.Xml.Serialization.XmlElementAttribute("authority", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AuthorityForNavaidEquipmentPropertyType> Authority
        {
            get
            {
                return this._authority;
            }
            private set
            {
                this._authority = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Authority-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Authority collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AuthoritySpecified
        {
            get
            {
                return (this.Authority.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DirectionFinderTimeSliceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DirectionFinderTimeSliceType" /> class.</para>
        /// </summary>
        public DirectionFinderTimeSliceType()
        {
            this._authority = new System.Collections.ObjectModel.Collection<AuthorityForNavaidEquipmentPropertyType>();
            this._monitoring = new System.Collections.ObjectModel.Collection<NavaidEquipmentMonitoringPropertyType>();
            this._availability = new System.Collections.ObjectModel.Collection<NavaidOperationalStatusPropertyType>();
            this._annotation = new System.Collections.ObjectModel.Collection<NotePropertyType>();
            this._informationProvision = new System.Collections.ObjectModel.Collection<InformationServicePropertyType>();
            this._extension = new System.Collections.ObjectModel.Collection<DirectionFinderTimeSliceTypeExtension>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NavaidEquipmentMonitoringPropertyType> _monitoring;
        
        [System.Xml.Serialization.XmlElementAttribute("monitoring", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NavaidEquipmentMonitoringPropertyType> Monitoring
        {
            get
            {
                return this._monitoring;
            }
            private set
            {
                this._monitoring = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Monitoring-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Monitoring collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonitoringSpecified
        {
            get
            {
                return (this.Monitoring.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NavaidOperationalStatusPropertyType> _availability;
        
        [System.Xml.Serialization.XmlElementAttribute("availability", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NavaidOperationalStatusPropertyType> Availability
        {
            get
            {
                return this._availability;
            }
            private set
            {
                this._availability = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Availability-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Availability collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailabilitySpecified
        {
            get
            {
                return (this.Availability.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NotePropertyType> _annotation;
        
        [System.Xml.Serialization.XmlElementAttribute("annotation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NotePropertyType> Annotation
        {
            get
            {
                return this._annotation;
            }
            private set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Annotation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("doppler", IsNullable=true)]
        public aixm.v5_1_1.CodeYesNoType Doppler { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InformationServicePropertyType> _informationProvision;
        
        [System.Xml.Serialization.XmlElementAttribute("informationProvision", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<InformationServicePropertyType> InformationProvision
        {
            get
            {
                return this._informationProvision;
            }
            private set
            {
                this._informationProvision = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InformationProvision-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InformationProvision collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InformationProvisionSpecified
        {
            get
            {
                return (this.InformationProvision.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DirectionFinderTimeSliceTypeExtension> _extension;
        
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.ObjectModel.Collection<DirectionFinderTimeSliceTypeExtension> Extension
        {
            get
            {
                return this._extension;
            }
            private set
            {
                this._extension = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
    }
}
