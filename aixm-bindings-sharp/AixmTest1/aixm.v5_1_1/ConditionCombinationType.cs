//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace aixm.v5_1_1
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConditionCombinationType", Namespace="http://www.aixm.aero/schema/5.1.1")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ConditionCombination", Namespace="http://www.aixm.aero/schema/5.1.1")]
    public partial class ConditionCombinationType : AbstractPropertiesWithScheduleType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TimesheetPropertyType> _timeInterval;
        
        [System.Xml.Serialization.XmlElementAttribute("timeInterval", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<TimesheetPropertyType> TimeInterval
        {
            get
            {
                return this._timeInterval;
            }
            private set
            {
                this._timeInterval = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeInterval-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TimeInterval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeIntervalSpecified
        {
            get
            {
                return (this.TimeInterval.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConditionCombinationType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConditionCombinationType" /> class.</para>
        /// </summary>
        public ConditionCombinationType()
        {
            this._timeInterval = new System.Collections.ObjectModel.Collection<TimesheetPropertyType>();
            this._annotation = new System.Collections.ObjectModel.Collection<NotePropertyType>();
            this._specialDateAuthority = new System.Collections.ObjectModel.Collection<OrganisationAuthorityPropertyType>();
            this._weather = new System.Collections.ObjectModel.Collection<MeteorologyPropertyType>();
            this._aircraft = new System.Collections.ObjectModel.Collection<AircraftCharacteristicPropertyType>();
            this._flight = new System.Collections.ObjectModel.Collection<FlightCharacteristicPropertyType>();
            this._subCondition = new System.Collections.ObjectModel.Collection<ConditionCombinationPropertyType>();
            this._extension = new System.Collections.ObjectModel.Collection<ConditionCombinationTypeExtension>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NotePropertyType> _annotation;
        
        [System.Xml.Serialization.XmlElementAttribute("annotation", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<NotePropertyType> Annotation
        {
            get
            {
                return this._annotation;
            }
            private set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Annotation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OrganisationAuthorityPropertyType> _specialDateAuthority;
        
        [System.Xml.Serialization.XmlElementAttribute("specialDateAuthority", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<OrganisationAuthorityPropertyType> SpecialDateAuthority
        {
            get
            {
                return this._specialDateAuthority;
            }
            private set
            {
                this._specialDateAuthority = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SpecialDateAuthority-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SpecialDateAuthority collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpecialDateAuthoritySpecified
        {
            get
            {
                return (this.SpecialDateAuthority.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("logicalOperator", IsNullable=true)]
        public aixm.v5_1_1.CodeLogicalOperatorType LogicalOperator { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MeteorologyPropertyType> _weather;
        
        [System.Xml.Serialization.XmlElementAttribute("weather", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<MeteorologyPropertyType> Weather
        {
            get
            {
                return this._weather;
            }
            private set
            {
                this._weather = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Weather-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Weather collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeatherSpecified
        {
            get
            {
                return (this.Weather.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AircraftCharacteristicPropertyType> _aircraft;
        
        [System.Xml.Serialization.XmlElementAttribute("aircraft", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<AircraftCharacteristicPropertyType> Aircraft
        {
            get
            {
                return this._aircraft;
            }
            private set
            {
                this._aircraft = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Aircraft-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Aircraft collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AircraftSpecified
        {
            get
            {
                return (this.Aircraft.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FlightCharacteristicPropertyType> _flight;
        
        [System.Xml.Serialization.XmlElementAttribute("flight", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<FlightCharacteristicPropertyType> Flight
        {
            get
            {
                return this._flight;
            }
            private set
            {
                this._flight = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Flight-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Flight collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlightSpecified
        {
            get
            {
                return (this.Flight.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConditionCombinationPropertyType> _subCondition;
        
        [System.Xml.Serialization.XmlElementAttribute("subCondition", IsNullable=true)]
        public System.Collections.ObjectModel.Collection<ConditionCombinationPropertyType> SubCondition
        {
            get
            {
                return this._subCondition;
            }
            private set
            {
                this._subCondition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SubCondition-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SubCondition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubConditionSpecified
        {
            get
            {
                return (this.SubCondition.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConditionCombinationTypeExtension> _extension;
        
        [System.Xml.Serialization.XmlElementAttribute("extension")]
        public System.Collections.ObjectModel.Collection<ConditionCombinationTypeExtension> Extension
        {
            get
            {
                return this._extension;
            }
            private set
            {
                this._extension = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Extension-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Extension collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtensionSpecified
        {
            get
            {
                return (this.Extension.Count != 0);
            }
        }
    }
}
